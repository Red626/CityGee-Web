<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OldHouse.Web</name>
    </assembly>
    <members>
        <member name="T:OldHouse.Web.App_Start.BusinessConfig">
            <summary>
            config all biusiness here, like db and data mapping
            </summary>
        </member>
        <member name="M:OldHouse.Web.App_Start.BusinessConfig.ConfigBusiness">
            <summary>
            config the business logic
            </summary>
        </member>
        <member name="M:OldHouse.Web.App_Start.BusinessConfig.ConfigDtoMapping">
            <summary>
            map DTO to bussiness model and viseversa
            </summary>
        </member>
        <member name="M:OldHouse.Web.App_Start.BusinessConfig.hotFix">
            <summary>
            fisx the data base migration problem or something here
            remember, once you fixed the issue comment out the code!!!
            </summary>
        </member>
        <member name="T:OldHouse.Web.Controllers.BaseController">
            <summary>
            
            </summary>
        </member>
        <member name="M:OldHouse.Web.Controllers.BaseController.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OldHouse.Web.Controllers.BaseController.SetUpUser">
            <summary>
            
            </summary>
        </member>
        <member name="M:OldHouse.Web.Controllers.BaseController.GetUserAgent">
            <summary>
            check if user is using a android client or something
            </summary>
        </member>
        <member name="M:OldHouse.Web.Controllers.BaseController.SetCity">
            <summary>
            
            </summary>
        </member>
        <member name="M:OldHouse.Web.Controllers.BaseController.GetLrfDto(System.Guid)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Account.Controllers.AccountController.Login(System.String)">
            <summary>
            获取登陆页面
            </summary>
            <param name="returnUrl">跳转链接</param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Account.Controllers.AccountController.Login(OldHouse.Web.Models.LoginViewModel,System.String)">
            <summary>
            处理登陆请求
            </summary>
            <param name="model"></param>
            <param name="returnUrl">跳转链接</param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Account.Controllers.AccountController.Logout">
            <summary>
            处理登出请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Account.Controllers.AccountController.Register(System.String)">
            <summary>
            获取主页页面
            </summary>
            <param name="returnUrl">跳转链接</param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Account.Controllers.AccountController.Register(OldHouse.Web.Models.RegisterViewModel,System.String)">
            <summary>
            处理注册请求
            </summary>
            <param name="model"></param>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="T:OldHouse.Web.Areas.Account.Controllers.FollowController">
            <summary>
            获取（被）关注用户
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.Account.Controllers.FollowController.GetView(System.Guid)">
            <summary>
            获取关注按钮
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Account.Controllers.FollowController.GetMyFollow(System.String)">
            <summary>
            我关注的用户列表页面
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Account.Controllers.FollowController.ByFollow(System.String)">
            <summary>
            我的粉丝列表页面
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:OldHouse.Web.Areas.Account.Controllers.ProfileController">
            <summary>
            whe user click on his avatar it will bring the user to one of these page
            this shows many info, with tabs, tab is not real tab but different pages
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.Account.Controllers.ProfileController.GetHomePage(System.String)">
            <summary>
            获取用户主页
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Account.Controllers.ProfileController.GetSetting">
            <summary>
            登录用户获取设置页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Account.Controllers.ProfileController.ModifyProfile(OldHouse.Web.Models.UserProfileDto)">
            <summary>
            处理用户修改资料请求
            </summary>
            <returns></returns>
        </member>
        <member name="T:OldHouse.Web.Areas.Account.Controllers.UserController">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.Account.Controllers.UserController.Index(System.Int32,System.Int32,System.String)">
            <summary>
            用户主页
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Account.Controllers.UserController.RankList(System.Int32,System.Int32,System.String)">
            <summary>
            获得搜索的用户列表，默认是得分排名列表
            </summary>
            <param name="page"></param>
            <param name="pagesize"></param>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="T:OldHouse.Web.Areas.Admin.Controllers.AdminController">
            <summary>
            管理员工作站
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.Admin.Controllers.AdminController.Index">
            <summary>
            获取管理员首页
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Admin.Controllers.AdminController.UserManagement(System.Int32,System.Int32,System.String)">
            <summary>
            获取用户管理页面
            </summary>
            <param name="page"></param>
            <param name="pagesize"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Admin.Controllers.AdminController.AllUser(System.Int32,System.Int32,System.String)">
            <summary>
            获取用户列表
            </summary>
            <param name="page"></param>
            <param name="pagesize"></param>
            <returns></returns>
        </member>
        <member name="T:OldHouse.Web.Areas.Checkin.Controllers.CheckinController">
            <summary>
            签到功能
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.Checkin.Controllers.CheckinController.CheckIn(OldHouse.Web.Models.CheckInDto)">
            <summary>
            处理添加签到请求
            </summary>
            <param name="checkInDto"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Checkin.Controllers.CheckinController.NewCheckIn(System.String,System.String)">
            <summary>
            获取新建签到页面
            </summary>
            <param name="houseId"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Checkin.Controllers.CheckinController.ListCheckInFor(System.String,System.Int32,System.Int32)">
            <summary>
            获取某house下的签到列表
            </summary>
            <param name="houseId"></param>
            <param name="page"></param>
            <param name="pagesize"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Checkin.Controllers.CheckinController.Detail(System.String)">
            <summary>
            获取签到详情页面
            </summary>
            <param name="id">the checkin id</param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Checkin.Controllers.CheckinController.MyCheckins(System.String,System.Int32,System.Int32)">
            <summary>
            获取我的签到列表页面
            </summary>
            <param name="id"></param>
            <param name="page"></param>
            <param name="pagesize"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Checkin.Controllers.CheckinController.UserCheckins(System.String,System.Int32,System.Int32)">
            <summary>
            获取我的签到列表
            checkin/user/{id}
            </summary>
            <param name="id">user id</param>
            <returns></returns>
        </member>
        <member name="T:OldHouse.Web.Areas.Developer.Controllers.DeveloperController">
            <summary>
            程序猿工作站
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.Developer.Controllers.DeveloperController.Index">
            <summary>
            获取程序猿操作首页
            </summary>
            <returns></returns>
        </member>
        <member name="T:OldHouse.Web.Areas.Editor.Controllers.EditorController">
            <summary>
            编辑工作站
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.Editor.Controllers.EditorController.Index">
            <summary>
            获取编辑操作首页
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Editor.Controllers.EditorController.ReleaseFeed">
            <summary>
            获取发布Feed页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Editor.Controllers.EditorController.ReleaseArticle">
            <summary>
            获取发布Article页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Editor.Controllers.EditorController.ReleaseFeed(OldHouse.Web.Models.ReleaseFeedDto)">
            <summary>
            处理发布Feed请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Editor.Controllers.EditorController.AddOrModifyArticle(OldHouse.Web.Models.ReleaseArticleDto)">
            <summary>
            处理发布/修改Article请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Editor.Controllers.EditorController.GetEditArticle(System.String)">
            <summary>
            获取某Article的编辑页面
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Editor.Controllers.EditorController.GetArticleDetail(System.String)">
            <summary>
            获取Article详情页面
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Editor.Controllers.EditorController.GetArticleList(System.Int32,System.Int32)">
            <summary>
            获取Article列表页面
            </summary>
            <param name="page"></param>
            <param name="pagesize"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Editor.Controllers.EditorController.GetArticleBriefList(System.Int32,System.Int32)">
            <summary>
            获取Article列表
            </summary>
            <param name="page"></param>
            <param name="pagesize"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Editor.Controllers.EditorController.HouseManagement(System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            获取House管理页面
            </summary>
            <param name="page"></param>
            <param name="pagesize"></param>
            <param name="search"></param>
            <param name="sortbykey"></param>
            <param name="ascend"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Editor.Controllers.EditorController.CheckinManagement(System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            获取Checkin管理页面
            </summary>
            <param name="page"></param>
            <param name="pagesize"></param>
            <param name="search"></param>
            <param name="sortbykey"></param>
            <param name="ascend"></param>
            <returns></returns>
        </member>
        <member name="T:OldHouse.Web.Areas.Feedback.Controllers.FeedbackController">
            <summary>
            用户反馈功能
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.Feedback.Controllers.FeedbackController.Index">
            <summary>
            用户反馈列表页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Feedback.Controllers.FeedbackController.All(System.Int32,System.Int32)">
            <summary>
            获取用户反馈列表
            </summary>
            <param name="page"></param>
            <param name="pagesize"></param>
            <returns></returns>
        </member>
        <member name="T:OldHouse.Web.Areas.Feed.Controllers.FeedController">
            <summary>
            Feed功能
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.Feed.Controllers.FeedController.Index(System.Int32,System.Int32)">
            <summary>
            返回feed首页
            </summary>
            <param name="page"></param>
            <param name="pagesize"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.Feed.Controllers.FeedController.All(System.Int32,System.Int32)">
            <summary>
            返回feed列表
            </summary>
            <param name="page"></param>
            <param name="pagesize"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:OldHouse.Web.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:OldHouse.Web.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:OldHouse.Web.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:OldHouse.Web.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:OldHouse.Web.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:OldHouse.Web.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:OldHouse.Web.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:OldHouse.Web.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:OldHouse.Web.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OldHouse.Web.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:OldHouse.Web.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:OldHouse.Web.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:OldHouse.Web.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:OldHouse.Web.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,OldHouse.Web.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,OldHouse.Web.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:OldHouse.Web.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},OldHouse.Web.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:OldHouse.Web.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="T:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey.#ctor(OldHouse.Web.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,OldHouse.Web.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:OldHouse.Web.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:OldHouse.Web.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OldHouse.Web.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:OldHouse.Web.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:OldHouse.Web.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:OldHouse.Web.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:OldHouse.Web.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:OldHouse.Web.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OldHouse.Web.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:OldHouse.Web.Areas.House.Controllers.HouseController">
            <summary>
            house相关功能
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.House.Controllers.HouseController.Near(System.Int32,System.Int32,System.String)">
            <summary>
            获取附近城迹页面
            </summary>
            <param name="page"></param>
            <param name="pagesize"></param>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.House.Controllers.HouseController.RealNear(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            获取附近成绩列表
            </summary>
            <param name="lnt">latitude</param>
            <param name="lat">longitude</param>
            <param name="page">page number</param>
            <param name="pagesize">defualt is 6</param>
            <param name="search">搜索条件</param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.House.Controllers.HouseController.HouseDetail(System.String,System.String)">
            <summary>
            获取house详情页面
            </summary>
            <param name="id"></param>
            <param name="dis"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.House.Controllers.HouseController.Brief(System.String)">
            <summary>
            获取house简介
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.House.Controllers.HouseController.HouseList(System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            获取house列表，按sortbykey排序
            </summary>
            <param name="page"></param>
            <param name="pagesize"></param>
            <param name="search"></param>
            <param name="sortbykey"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.House.Controllers.HouseController.GetEditHousePage(System.String)">
            <summary>
            获取新建/编辑house页面
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.House.Controllers.HouseController.AddOrModifyHouse(OldHouse.Web.Models.HouseDiscoverDto)">
            <summary>
            处理添加/修改house请求
            </summary>
            <param name="newHouse"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.House.Controllers.HouseController.MyHouses(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            获取用户创建的house列表页面
            </summary>
            <param name="id"></param>
            <param name="page"></param>
            <param name="pagesize"></param>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.House.Controllers.HouseController.UserDiscoveries(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            获取用户创建的house列表
            </summary>
            <param name="id"></param>
            <param name="page"></param>
            <param name="pagesize"></param>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="T:OldHouse.Web.Areas.LikeRateFav.Controllers.LikeRateFavController">
            <summary>
            Favorite功能
            </summary>
        </member>
        <member name="M:OldHouse.Web.Areas.LikeRateFav.Controllers.LikeRateFavController.LikeMe(System.Guid)">
            <summary>
            获取点赞按钮
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.LikeRateFav.Controllers.LikeRateFavController.MyLiked(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            获取用户赞过的house或checkin列表页面
            </summary>
            <param name="id"></param>
            <param name="type"></param>
            <param name="page"></param>
            <param name="pagesize"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.LikeRateFav.Controllers.LikeRateFavController.UserLikedHouses(System.String,System.Int32,System.Int32)">
            <summary>
            获取用户赞过的house列表
            </summary>
            <param name="id"></param>
            <param name="page"></param>
            <param name="pagesize"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.LikeRateFav.Controllers.LikeRateFavController.UserLikedCheckins(System.String,System.Int32,System.Int32)">
            <summary>
            获取用户赞过的checkin列表
            </summary>
            <param name="id"></param>
            <param name="page"></param>
            <param name="pagesize"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.LikeRateFav.Controllers.LikeRateFavController.BeLiked(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            获取用户被赞过的house或checkin列表页面
            </summary>
            <param name="id"></param>
            <param name="type"></param>
            <param name="page"></param>
            <param name="pagesize"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.LikeRateFav.Controllers.LikeRateFavController.BeLikedHouses(System.String,System.Int32,System.Int32)">
            <summary>
            获取用户被赞过的house列表
            </summary>
            <param name="id"></param>
            <param name="page"></param>
            <param name="pagesize"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Areas.LikeRateFav.Controllers.LikeRateFavController.BeLikedCheckins(System.String,System.Int32,System.Int32)">
            <summary>
            获取用户被赞过的checkin列表
            </summary>
            <param name="id"></param>
            <param name="page"></param>
            <param name="pagesize"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.API.AccountController.AmIFollowing(System.Guid)">
            <summary>
            Am i following this user
            </summary>
            <param name="targetUserId">the followee user id</param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.API.AccountController.ToggleFollow(System.Guid)">
            <summary>
            toggle following the target user of the current user user
            </summary>
            <param name="targetUserId"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.API.AccountController.GetAllFollowingIds">
            <summary>
            get all followee ids for the current user
            </summary>
            <returns></returns>
        </member>
        <member name="T:OldHouse.Web.Controllers.ContentController">
            <summary>
            handles the stiatic content of the site
            </summary>
        </member>
        <member name="M:OldHouse.Web.Controllers.ContentController.UploadCheckInImage">
            <summary>
            upload a image to be a checkin photo,
            the photo is resized first and then croped from the center,
            the result will be a image @920*720px
            </summary>
            <returns> Ok(new UploadResponse { UploadedFileUrls = new List string {path}})</returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.ContentController.UploadHouseImage">
            <summary>
            upload a image to be a house photo,
            the photo is resized first and then croped from the center,
            the result will be a image @920*720px
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.ContentController.UploadFeedImage">
            <summary>
            Editor Upload Feed Image
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.ContentController.UploadAvatar">
            <summary>
            上传头像
            如果头像过大，则默认裁剪为128*128
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.ContentController.QRCode(System.String)">
            <summary>
            生成页面网址的二维码
            </summary>
            <param name="model">activity的id</param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.ContentController.MyHouses(System.String)">
            <summary>
            获取用户创建的old house
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.ContentController.MyCheckins(System.String)">
            <summary>
            获取用户的签到
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.ContentController.GetLatestAndoidApp">
            <summary>
            get the verion info of the latest android app
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.API.EditorController.ToggleApproveHouse(System.String)">
            <summary>
            将house认证状态取反
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:OldHouse.Web.Controllers.API.EditorController.ToggleEssenceCheckIn(System.String)">
            <summary>
            将签到精华状态取反
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:OldHouse.Web.Controllers.API.FeedbackController.feedback(Jtext103.OldHouse.Business.Models.FeedBackEntity)">
            <summary>
            insert a new feedback
            </summary>
            <param name="feedback"></param>
        </member>
        <member name="M:OldHouse.Web.Controllers.API.FeedbackController.deleteOne(System.String)">
            <summary>
            delete a feedback
            </summary>
        </member>
        <member name="M:OldHouse.Web.Controllers.LocationController.CachedLocation">
            <summary>
            get the cached location, the location is based on IP address, so if your ip address is not changed bu you traveled a long way you should update the location
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.LocationController.UpCachedLocation(OldHouse.Web.Models.LocationDto)">
            <summary>
            update the location cache for the requested ip
            </summary>
            <param name="location">the new location</param>
        </member>
        <member name="M:OldHouse.Web.Controllers.LocationController.DistanceBetween(System.String,System.String)">
            <summary>
            return the distance of a 2 points, in km
            </summary>
            <param name="loc1">"lng;lat"</param>
            <param name="loc2">"lng;lat"</param>
            <returns>distance in km</returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.LocationController.GetAndCacheIpLocation">
            <summary>
            if the user browser cannot get a geolocation, it will try to get, the ip loction
            it will be cached automatically
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.LocationController.GetIpLocation">
            <summary>
            get the ip location, but this will not cache the coorinates and only returns the location, 
            but it will update the region info if there is aready a cached location for this ip
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.LocationController.RefreshUserCity(OldHouse.Web.Controllers.CityModel)">
            <summary>
            RefreshUserCity
            </summary>
            <param name="model"></param>
        </member>
        <member name="T:OldHouse.Web.Controllers.API.LrfController">
            <summary>
            to like, rate, favorite or read an entity
            </summary>
        </member>
        <member name="M:OldHouse.Web.Controllers.API.LrfController.RateHouse(OldHouse.Web.Models.LrfDto)">
            <summary>
            rate a house
            lrf/house/rate
            </summary>
            <param name="rateDto">the target id and the type, you can only rate a house now, this rating relies on entity service ont only the lrf service</param>
            <returns>the new rating</returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.API.LrfController.GetHouseRate(System.Guid)">
            <summary>
            get the current user rating for a house,!! worksonly on house, try not use this, you get rating from the house entity
            lrf/my/house/rate
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.API.LrfController.ToggleLike(OldHouse.Web.Models.LrfDto)">
            <summary>
            toggle the like of the entity
            lrf/toggelLiek
            </summary>
            <param name="rateDto"></param>
            <returns>the new like or not, and times</returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.API.LrfController.ToggleFavorite(OldHouse.Web.Models.LrfDto)">
            <summary>
            toggle the favorate of an entity
            lef/toggleFavorite
            </summary>
            <param name="rateDto"></param>
            <returns>the new fav or not and times</returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.API.LrfController.Read(OldHouse.Web.Models.LrfDto)">
            <summary>
            read a entity only works for logged in user
            lrf/read
            </summary>
            <param name="rateDto"></param>
            <returns>the new fav or not</returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.API.LrfController.GetLrfTime(System.Guid,System.String)">
            <summary>
            get the Like,Rate, Favorite, Read times for an entity
            lrf/times/{type}/{id}
            </summary>
            <param name="id"></param>
            <param name="type">Like,Rate, Favorite, Read</param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.API.LrfController.Get(System.Guid,System.String)">
            <summary>
            get if the current user have Like,Rate, Favorite, Read this entity
            lrf/my/{type}/{id}
            </summary>
            <param name="id">entity id</param>
            <param name="type">Like,Rate, Favorite, Read</param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.HomeController.Index">
            <summary>
            对于已登陆用户跳转到新鲜事，未登录用户跳转到登录页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.HomeController.LoadingStart">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.HomeController.LoadingMore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.HomeController.FunGame">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.HomeController.WebSiteHistory">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.HomeController.AboutUs">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.HomeController.AppDownload">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Controllers.HomeController.CooperativePartner">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Extension.StringExtension.GenerateSlug(System.String)">
            <summary>
            generate a human reable slug
            </summary>
            <param name="phrase"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Extension.StringExtension.GeneratePinYinSlug(System.String)">
            <summary>
            generate a pinyin slug for a chinese string
            </summary>
            <param name="phrase"></param>
            <returns></returns>
        </member>
        <member name="M:OldHouse.Web.Filters.UserInfoAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            fill user log in lifo 
            as well as user's client info
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:OldHouse.Web.Models.CheckInDto">
            <summary>
            used to create, list, detail a check in
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.CheckInDto.Distance">
            <summary>
            currently this is only used for display
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.CheckInDto.HouseName">
            <summary>
            this is information for house
            </summary>
        </member>
        <member name="T:OldHouse.Web.Models.HouseDiscoverDto">
            <summary>
            used to 
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.HouseDiscoverDto.Id">
            <summary>
            House guid
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.HouseDiscoverDto.OwnerId">
            <summary>
            the user guid whom added by
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.HouseDiscoverDto.IsApproved">
            <summary>
            Is aproved by editor
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.HouseDiscoverDto.Name">
            <summary>
            need register
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.HouseDiscoverDto.LocationString">
            <summary>
            a string describe this location
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.HouseDiscoverDto.Country">
            <summary>
            the bloe 3 location related prop should be auto-filled
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.HouseDiscoverDto.Cover">
            <summary>
            one of the images user uploaded,
            better if can be choosed
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.HouseDiscoverDto.CodeName">
            <summary>
            a unique code name for a house, unlike the ID its's human readable
            for user discoveed houses, this will be generated using a slug generater
            /// </summary>
        </member>
        <member name="P:OldHouse.Web.Models.HouseDiscoverDto.Lnt">
            <summary>
            longitude
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.HouseDiscoverDto.Lat">
            <summary>
            latitude
            </summary>
        </member>
        <member name="T:OldHouse.Web.Models.HouseBrief">
            <summary>
            brif infor for houses, used for listing
            </summary>
        </member>
        <member name="T:OldHouse.Web.Models.LrfDto">
            <summary>
            this is not only used in rating thing, it also used in Like and Favorite
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.LrfDto.Id">
            <summary>
            the target id you what to rate or like or favorite
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.LrfDto.Rating">
            <summary>
            the rating in float, only used if you are rating things, or display ratings
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.LrfDto.LrfCount">
            <summary>
            how many users have Lrf this entity
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.LrfDto.DidILrf">
            <summary>
            did i rate live fav or read this entity?
            </summary>
        </member>
        <member name="P:OldHouse.Web.Models.LrfDto.TargetType">
            <summary>
            is it a House, CheckIn in or anything?
            </summary>
        </member>
        <member name="T:OldHouse.Web.Models.UpgradeInfo">
            <summary>
            hold th info of the latest app
            ,naming convension is java compatible
            </summary>
        </member>
    </members>
</doc>
